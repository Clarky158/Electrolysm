package electro.research.client;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Set;

import javax.imageio.ImageIO;

import electro.handlers.helpers.ColourEnumHelper;
import electro.research.system.EnumResearchType;
import electro.research.system.ResearchRegistry;
import net.minecraft.client.gui.Gui;
import net.minecraft.client.gui.ScaledResolution;
import org.apache.commons.lang3.text.WordUtils;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL12;

import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.RenderHelper;
import net.minecraft.entity.player.InventoryPlayer;
import electro.common.CommonProxy;
import electro.handlers.ResearchHandler;

public class GUIIDCardInfo extends GuiScreen
{
	public GUIIDCardInfo(InventoryPlayer inventory)
	{
		super();
	}


	int xSize = 741;
    int ySize = 646;
	public boolean isBookAdv;
    int xCentre;
    int yCentre;

	@Override
    public void drawScreen(int par1, int par2, float par3)
    {
        ScaledResolution res = new ScaledResolution(mc.gameSettings, mc.displayHeight, mc.displayWidth);
        height = res.getScaledHeight();
        width = res.getScaledWidth();
        int scaleFactor = res.getScaleFactor();
        yCentre = mc.displayHeight / 4;
        xCentre = mc.displayWidth / 4;

		//this.drawDefaultBackground();
        this.renderBlackgroundLeft(scaleFactor);
        this.renderBlackgroundRight(scaleFactor);
        //this.renderText("Scientist's Encyclepedia");//title
		//this.renderNotWorkingText();

        int researchTypes = EnumResearchType.getHashMap().size();
        Set<String> typeNames = EnumResearchType.getHashMap().keySet();

        for(int i = 0; i < researchTypes; i++)
        {
            this.renderTextFromList(WordUtils.capitalize((String.valueOf(typeNames.toArray()[i])).replace("_", " ")), i);
        }

        HashMap<String, String> research = ResearchRegistry.getResearchMap();
        Set<String> researchNames = research.keySet();
        for(int i = 0; i < researchNames.size(); i++)
        {

        }

    }

    private int[] getSizeRatio(int hight, int width)
    {
        return new int[] {hight / width, 1};
    }

    private void renderTextFromList(String text, int value)
    {
        this.fontRendererObj.drawString(ColourEnumHelper.WHITE + text, (xCentre / 2) + 20,
                (int)((yCentre / 4) + (yCentre * getSizeRatio(yCentre, xCentre)[0])
                        * getSizeRatio(yCentre, xCentre)[0]) + (12 * value), 4210752);
    }

	private void renderBlackgroundLeft(int scaleFactor)
	{
        //System.out.println(xCentre + ":" + yCentre);
        int xSize1 = 670 / 2 + 100 - 50 - 100 - 30;//670
        int ySize1 = 450 / 2 + 50 - 20;//450

        GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
        //GL11.glScalef(1.0F, 0.80F, 1.0F);

        this.mc.renderEngine.bindTexture(CommonProxy.BOOK_LEFT);
        int xStart = (width - xSize1) / 2;
        int yStart = (height - ySize1) / 2;
        this.drawTexturedModalRect(xCentre - (xSize1 / 2) - 54, yCentre  - (ySize1 / 2), 0, 0, xSize1, ySize1);
	}

    private void renderBlackgroundRight(int scaleFactor)
    {
        //System.out.println(xCentre + ":" + yCentre + ":");
        int xSize1 = 670 / 2 + 100 - 50 - 100 - 30;//670
        int ySize1 = 450 / 2 + 50 - 20;//450

        GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
        //GL11.glScalef(1.0F - scaleFactor, 1.0F - scaleFactor, 1.0F - scaleFactor);

        this.mc.renderEngine.bindTexture(CommonProxy.BOOK_RIGHT);
        int xStart = (width - xSize1) / 2;
        int yStart = (height - ySize1) / 2;
        this.drawTexturedModalRect(xCentre - 1, yCentre - (ySize1 / 2), 0, 0, xSize1, ySize1);
    }


	private void renderNotWorkingText()
	{
        int xStart = (width) / 2;
        int yStart = (height) / 2;
        fontRendererObj.drawString(ColourEnumHelper.WHITE + "This is currently unavailable!", xStart - 80 + 10 - 5, yStart - 20, 4210752);
        fontRendererObj.drawString(ColourEnumHelper.WHITE + "Sorry!", xStart - 20 + 5, yStart + 10, 4210752);
	}

    @Override
    public boolean doesGuiPauseGame()
    {
        return false;
    }
}
