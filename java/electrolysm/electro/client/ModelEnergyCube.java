// Date: 20/07/2014 15:13:59
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package electrolysm.electro.client;

import electrolysm.electro.handlers.TickHandler;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelEnergyCube extends ItemBlockModelBase
{
  //fields
    ModelRenderer bottom;
    ModelRenderer leg1;
    ModelRenderer leg2;
    ModelRenderer leg3;
    ModelRenderer leg4;
    ModelRenderer top;
    ModelRenderer Image;
    ModelRenderer wall1;
    ModelRenderer wall2;
    ModelRenderer wall3;
    ModelRenderer wall4;
    ModelRenderer side1;
    ModelRenderer side2;
    ModelRenderer side3;
    ModelRenderer side4;
  
  public ModelEnergyCube()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      bottom = new ModelRenderer(this, 0, 25);
      bottom.addBox(-8F, 0F, -8F, 16, 1, 16);
      bottom.setRotationPoint(0F, 23F, 0F);
      bottom.setTextureSize(128, 128);
      bottom.mirror = true;
      setRotation(bottom, 0F, 0F, 0F);
      leg1 = new ModelRenderer(this, 0, 0);
      leg1.addBox(0F, 0F, 0F, 2, 14, 2);
      leg1.setRotationPoint(-8F, 9F, 6F);
      leg1.setTextureSize(128, 128);
      leg1.mirror = true;
      setRotation(leg1, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 0, 0);
      leg2.addBox(0F, 0F, 0F, 2, 14, 2);
      leg2.setRotationPoint(6F, 9F, 6F);
      leg2.setTextureSize(128, 128);
      leg2.mirror = true;
      setRotation(leg2, 0F, 0F, 0F);
      leg3 = new ModelRenderer(this, 0, 0);
      leg3.addBox(0F, 0F, 0F, 2, 14, 2);
      leg3.setRotationPoint(6F, 9F, -8F);
      leg3.setTextureSize(128, 128);
      leg3.mirror = true;
      setRotation(leg3, 0F, 0F, 0F);
      leg4 = new ModelRenderer(this, 0, 0);
      leg4.addBox(0F, 0F, 0F, 2, 14, 2);
      leg4.setRotationPoint(-8F, 9F, -8F);
      leg4.setTextureSize(128, 128);
      leg4.mirror = true;
      setRotation(leg4, 0F, 0F, 0F);
      top = new ModelRenderer(this, 0, 25);
      top.addBox(0F, 0F, 0F, 16, 1, 16);
      top.setRotationPoint(-8F, 8F, -8F);
      top.setTextureSize(128, 128);
      top.mirror = true;
      setRotation(top, 0F, 0F, 0F);
      Image = new ModelRenderer(this, 0, 100);
      Image.addBox(-3F, -2F, -3F, 6, 6, 6);
      Image.setRotationPoint(0F, 15F, 0F);
      Image.setTextureSize(128, 128);
      Image.mirror = true;
      setRotation(Image, 0F, 0F, 0F);
      wall1 = new ModelRenderer(this, 0, 54);
      wall1.addBox(0F, 0F, 0F, 1, 14, 12);
      wall1.setRotationPoint(6F, 9F, -6F);
      wall1.setTextureSize(128, 128);
      wall1.mirror = true;
      setRotation(wall1, 0F, 0F, 0F);
      wall2 = new ModelRenderer(this, 13, 54);
      wall2.addBox(0F, 0F, 0F, 1, 14, 12);
      wall2.setRotationPoint(-7F, 9F, -6F);
      wall2.setTextureSize(128, 128);
      wall2.mirror = true;
      setRotation(wall2, 0F, 0F, 0F);
      wall3 = new ModelRenderer(this, 68, 65);
      wall3.addBox(0F, 0F, 0F, 12, 14, 1);
      wall3.setRotationPoint(-6F, 9F, -7F);
      wall3.setTextureSize(128, 128);
      wall3.mirror = true;
      setRotation(wall3, 0F, 0F, 0F);
      wall4 = new ModelRenderer(this, 55, 65);
      wall4.addBox(0F, 0F, 0F, 12, 14, 1);
      wall4.setRotationPoint(-6F, 9F, 6F);
      wall4.setTextureSize(128, 128);
      wall4.mirror = true;
      setRotation(wall4, 0F, 0F, 0F);
      side1 = new ModelRenderer(this, 39, 90);
      side1.addBox(0F, 0F, 0F, 1, 14, 12);
      side1.setRotationPoint(-8F, 9F, -6F);
      side1.setTextureSize(128, 128);
      side1.mirror = true;
      setRotation(side1, 0F, 0F, 0F);
      side2 = new ModelRenderer(this, 26, 90);
      side2.addBox(0F, 0F, 0F, 1, 14, 12);
      side2.setRotationPoint(7F, 9F, -6F);
      side2.setTextureSize(128, 128);
      side2.mirror = true;
      setRotation(side2, 0F, 0F, 0F);
      side3 = new ModelRenderer(this, 96, 90);
      side3.addBox(0F, 0F, 0F, 12, 14, 1);
      side3.setRotationPoint(-6F, 9F, -8F);
      side3.setTextureSize(128, 128);
      side3.mirror = true;
      setRotation(side3, 0F, 0F, 0F);
      side4 = new ModelRenderer(this, 83, 90);
      side4.addBox(0F, 0F, 0F, 12, 14, 1);
      side4.setRotationPoint(-6F, 9F, 7F);
      side4.setTextureSize(128, 128);
      side4.mirror = true;
      setRotation(side4, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    bottom.render(f5);
    leg1.render(f5);
    leg2.render(f5);
    leg3.render(f5);
    leg4.render(f5);
    top.render(f5);
    Image.render(f5);
    wall1.render(f5);
    wall2.render(f5);
    wall3.render(f5);
    wall4.render(f5);

    Image.rotateAngleX = TickHandler.rotation;
    Image.rotateAngleY = TickHandler.rotation * (-1);
    Image.rotateAngleZ = TickHandler.rotation;
  }

    public void renderSide(int side)
    {
        //System.out.println(side);
        float scale = 0.0625F;
        if(side == 2)
        {
            side3.render(scale);
        }
        if(side == 3)
        {
            side4.render(scale);
        }
        if(side == 4)
        {
            side2.render(scale);
        }
        if(side == 5)
        {
            side1.render(scale);
        }
    }

  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
  }

}
